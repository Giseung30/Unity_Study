<Unity 스터디 5주차 : Raycast를 이용한 총알 피하기 게임>

[Raycast]
- 특정 방향벡터로 판정선(Ray)를 발사하여 충돌한 물체,위치, 거리 등의 정보를 가져오는 기법이다.
	◇ 코드
        Ray ray; //판정선
        RaycastHit hit; //레이캐스트가 충돌한 결과
        ray = Camera.main.ScreenPointToRay(Input.mousePosition); //마우스 위치로부터 판정선 생성
        if (Physics.Raycast(ray, out hit)) //충돌이 발생하면 true이고, 결과는 hit 변수에 담긴다
        {
            Debug.Log(hit.point); //충돌한 좌표
            Debug.Log(hit.transform); //충돌한 오브젝트
            Debug.Log(hit.distance); //판정선의 길이
        }
- 카메라가 아닌 물체에서 Raycast를 발생할 수 있다.
	◇ Physics Raycast({Vector3(발생 위치)}, {Vector3(발사 방향)}, out {RaycastHit(결과 위치)});
- 부하가 심한 작업이므로 Update문에서 매 프레임마다 실행하는 것은 좋지 않다.

[MousePosition]
- Input.GetMouseButtonDown({Int}) 함수를 통해 마우스의 버튼을 눌렀는 지를 확인할 수 있다.
	◇ Input.GetMouseButtonDown(0) : 마우스 왼쪽 버튼 클릭
	◇ Input.GetMouseButtonDown(1) : 마우스 오른쪽 버튼 클릭
	◇ Input.GetMouseButtonDown(2) : 마우스 휠 버튼 클릭

[벡터의 정규화]
- 방향 벡터의 길이를 1로 만들어준다.
- Vector3.Normalize({Vector3});

[벡터 사이의 거리]
- Vector3.Distance({Vector3}, {Vector3}) 함수를 통해 두 벡터 사이의 거리를 측정할 수 있다.

[Rigidbody : Constraints]
- Rigidbody 컴포넌트에 있는 옵션으로, 위치를 고정하거나, 회전을 고정할 수 있다.
- Freeze Position : 특정 좌표 축의 이동 고정
- Freeze Rotation : 특정 좌표 축의 회전 고정

[AddForce]
- {Rigidbody}.AddForce({Vector3(방향 벡터)} * {float(힘)}) 함수로 원하는 방향 벡터 쪽으로 힘을 줄 수 있다.
- {Rigidbody}.AddForce({Vector3(방향 벡터)} * {float(힘)}, ForceMode.Impulse) 함수로 원하는 방향 벡터 쪽으로 순간적인 힘을 줄 수 있다.

[C# 배열]
- 선언 : GameObect[] obj;
- 메모리 할당 : obj = GameObject[5];

[Sprite 삽입]
- 2D 이미지는 Sprite로 분류된다.
- {Image}.sprite = {Sprite};

[Scene 전환]
- Scene을 전환하기 전에 최소한 두 개 이상의 Scene이 존재해야한다.
- File → Build Settings의 Scenes In Build에 Scene 파일을 드래그 앤 드롭한다.
- 오른쪽에 Scene 번호가 지정되면, SceneManager.LoadScene({int}) 함수로 Scene을 전환할 수 있다.

[static 클래스]
- static으로 선언된 클래스는 모든 Scene에서 참조 가능하며, Scene 상태에 영향받지 않는다.
	◇ 내부 변수도 static으로 선언되어야 한다.
	
[실행 종료]
- Application.Quit() 함수를 통해 Unity 실행을 종료할 수 있다.