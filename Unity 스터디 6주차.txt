<Unity 스터디 6주차 : FPS(First-person shooter)>

[패턴 반복 Material]
- 이미지의 Inspector 탭에서 Wrap Mode를 Repeat로 지정한다.
- Material의 Albedo에 Texture를 지정하고, RGBA 값을 (255, 255, 255, 0)로 설정한다.
- Material의 Tiling 값을 지정하여, 패턴의 반복 정도를 조절한다.

[Character Controller 컴포넌트]
- CharacterController는 리지드바디(rigidbody)를 다루지 않고, 충돌에 의한 움직임을 다루기 쉽도록 해준다.
	◇ Slope Limit : 지나갈 수 있는 최대 경사 각도
	◇ Step Offset : 오를 수 있는 최대 계단 높이
	◇ Skin Width : 계단을 오르기 시작하는 가로 범위
	◇ Min Move Distance : 최소 이동 거리
- {CharacterController}.Move({Vector3} * {float(이동 속도)}) 함수를 통해 절대 방향으로 이동할 수 있다.

[상대 방향벡터 → 절대 방향벡터]
- {Transform(절대 방향벡터로의 변환을 원하는 Transform)}.playerTransform.TransformDirection({Vector3(상대 방향벡터)}) 함수는 Transform의 상대 방향벡터를 절대 방향벡터로 변환해준다.

[Input Axis 설정]
- Edit → Project Settings → Input Manager에서 Axis에 대한 설정을 커스텀할 수 있다.

[마우스 입력 좌표 값]
- Input.GetAxis("Mouse X") 함수를 통해 마우스 x축 가속도 값을 수치로 받을 수 있다.
- Input.GetAxis("Mouse Y") 함수를 통해 마우스 y축 가속도 값을 수치로 받을 수 있다.

[Rotate 함수]
- {Transform}.Rotate({float}, {float}, {float}) 함수를 사용하면 상대 방향으로 회전을 할 수 있다.

[오일러 각도]
- 오일러 각도는 Quaternion과 같은 복잡한 각도 체계를 사용하는 것이 아니라, {0도, 45도, 90도, ...}와 같은 실세계에서 사용하는 각도 체계를 사용한다.
- {Transform}.eulerAngles (Vector3)를 사용하면 {x, y, z}로 참조 가능하고, new로 할당 가능하다.
- 원하는 각도를 오일러 각도로 변환하고 싶으면 Quaternion.EulerAngles({float}, {float}, {float}) 함수를 사용한다.

[최소 최대 제한하기]
- Mathf.Clamp({float(변수)}, {float(최솟값)}, {float(최대값)}) 함수를 이용하면 특정 변수의 할당 범위를 조절할 수 있다.
	◇ 최솟값 아래로 내려가면 최솟값을 반환
	◇ 최댓값 위로 올라가면 최댓값을 반환
	◇ 사이의 값이면 그대로 반환

[마우스 숨기기/고정하기]
- Cursor.lockState = CursorLockMode.Locked;

[카메라 픽셀 너비/높이]
- {Camera}.pixelWidth : 너비
- {Camera}.pixelHeight : 높이

[Audio Source 컴포넌트]
- 오디오를 재생시킬 수 있는 컴포넌트이다.
	◇ AudioClip : 재생할 오디오 클립
	◇ Mute : 음소거
	◇ Play On Awake : 게임을 시작하고 나서 바로 실행
	◇ Loop : 반복 여부
	◇ Priority : 소리 품질
	◇ Volume : 음량 조절
	◇ Pitch : 속도 조절
	◇ Spatial Blend : 2D에서 3D까지 조절가능하다. (3D는 Audio Listener 컴포넌트가 부착된 오브젝트와의 거리, 방향에 따라 입체적인 소리를 들려준다)
	◇ 3D Sound Setting : Spatial Blend가 3D일 때만 의미가 있고, 거리에 따른 소리의 음량을 세부적으로 조절할 수 있다.
- {AudioSource}.Play() 함수는 AudioClip을 처음부터 실행한다. (따라서, 매 프레임마다 실행시키면 소리가 씹힌다.)
- {AudioSource}.playOneShot({AudioClip}) 함수는 해당 AudioSource의 특성을 지닌 채로 따로 AudioClip을 한번 실행한다.

[Particle System]
- 입자를 표현해내는 컴포넌트
	◇ Looping : 반복 여부
	◇ Prewarm : 서서히 활성화되는 효과의 경우(ex> 불) 초기부터 최대 활성화 여부
	◇ Simulation Space : 효과를 발생시키는 위치를 위미한다.
	◇ Play On Awake : 게임을 시작하고 나서 바로 실행
	◇ Stop Action : 효과가 끝나고 나서의 상태 (Destroy : 오브젝트 파괴, Disable : 비활성화, Callback : 대기)
- Particle System은 GameObject의 자료형으로 관리하는 경우가 대부분이다.